---
interface Props {
    title: string;
    description: string;
    stack: string[];
    githubUrl?: string;
    demoUrl?: string;
    icon?: any; // Puedes pasar un SVG o un slot
    gradientFrom?: string;
    gradientTo?: string;
}

const {
    title,
    description,
    stack,
    githubUrl,
    demoUrl,
    icon,
    gradientFrom = "from-primary/20",
    gradientTo = "to-secondary/20",
} = Astro.props;
---

<div
    class="card group hover:shadow-xl transition-all duration-300 hover:-translate-y-1 "
>
    <div
        class={`aspect-video bg-gradient-to-br ${gradientFrom} ${gradientTo} rounded-t-lg flex items-center justify-center`}
    >
        {
            icon ? (
                icon
            ) : (
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="w-12 h-12 text-primary"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                >
                    <path d="m18 16 4-4-4-4" />
                    <path d="m6 8-4 4 4 4" />
                    <path d="m14.5 4-5 16" />
                </svg>
            )
        }
    </div>

    <div class="p-6">
        <h3 class="text-lg font-semibold">{title}</h3>
        <p class="text-sm text-muted-foreground mt-2">{description}</p>
    </div>

    <div class="p-6 pt-0">
        <div class="flex flex-wrap gap-2 mb-4">
            {
                stack.map((tech) => (
                    <span class="badge badge-outline">{tech}</span>
                ))
            }
        </div>

        <div class="flex gap-2">
            {
                githubUrl && (
                    <a
                        href={githubUrl}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="btn btn-sm btn-outline gap-2 bg-transparent"
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="w-5 h-5 text-primary"
                            viewBox="0 0 24 24"
                            fill="currentColor"
                        >
                            <path d="M12 0C5.37 0 0 5.37 0 12..." />
                        </svg>
                        CÃ³digo
                    </a>
                )
            }
            {
                demoUrl && (
                    <a
                        href={demoUrl}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="btn btn-sm gap-2 bg-primary text-primary-foreground hover:bg-primary/90"
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="w-4 h-4"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            viewBox="0 0 24 24"
                        >
                            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                            <polyline points="15 3 21 3 21 9" />
                            <line x1="10" x2="21" y1="14" y2="3" />
                        </svg>
                        Demo
                    </a>
                )
            }
        </div>
    </div>
</div>

<style>
	:root {
		--card: #18181b;
		--card-foreground: #fafafa;
	}

	
	.bg-muted\/30 {
		background-color: rgba(39, 39, 42, 0.3);
	}
	.border-t {
		border-top: 1px solid var(--border);
	}

	.text-pretty {
		text-wrap: pretty;
	}
	.text-balance {
		text-wrap: balance;
	}
	.bg-card {
		background-color: var(--card);
	}
	.text-card-foreground {
		color: var(--card-foreground);
	}
	.rounded-xl {
		border-radius: 0.75rem;
	}
	.border {
		border: 1px solid var(--border);
	}
	.shadow {
		--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1),
			0 1px 2px -1px rgb(0 0 0 / 0.1);
		--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
			0 1px 2px -1px var(--tw-shadow-color);
		box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
			var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	}

	/* Custom styles for components */
	.btn {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		border-radius: 0.5rem;
		font-weight: 500;
		transition:
			color 0.2s,
			background-color 0.2s;
		cursor: pointer;
	}

	.btn-lg {
		height: 3rem;
		padding: 0.75rem 1.5rem;
		font-size: 1rem;
	}

	.btn-outline {
		background-color: transparent;
		border: 1px solid var(--border);
	}

	.badge {
		display: inline-flex;
		align-items: center;
		border-radius: 9999px;
		padding: 0.25rem 0.625rem;
		font-size: 0.75rem;
		font-weight: 600;
		background-color: var(--secondary);
		color: var(--secondary-foreground);
	}

	.badge-outline {
		background-color: transparent;
		border: 1px solid var(--border);
	}

	.card {
		border-radius: 0.75rem;
		border: 1px solid var(--border);
		background-color: var(--card);
		color: var(--card-foreground);
	}


</style>